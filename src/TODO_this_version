Para esta version:

--Mejoras

-algun tipo de build que no sea ni linux ni mac ni windows, sino simplemente UNIX_GENERIC o algo similar

-conviene ocultar Wall y Wextra en version estable? puede salir algun warning util solo en version estable? no deberia, son warnings muy especificos

-Botón derecho botones acciones: editar botón superior. Y en dispositivos? Quizá setting…

-Quiza registro DE al volver de rutina de trap load, deberia ser DE -=bytes_leidos


--Fin mejoras


--Errores

-Error: Abrir menú debug cpu con tecla F
Luego pulsar botón salir emulador
Y cierra menus pero no sale

-ZENG soporte para QL. ok aunque no envia teclas extendidas
-ZENG para msx se leen los cursores en destino
-ZENG colecovision no va bien

-revisar en menu_debug_change_registers(void),
//Si lanzo con debug_print ERR, y estamos en modo step, se habilita multitarea, por que?


-archivos de cintas que no se cierran en windows al expulsarlas

-kempston mouse en cursor draw en menu abierto lee en apariencia aleatoriamente

-speech con caracteres con acentos no los envia, los filtra 


-Probar generic message en stdout. Funciona bien?

-Desactivar border hace desaparecer el joystick. Solo en cocoa?

-snapshot ZSF de nextdows, no guarda la parte inferior de pantalla aparentemente

-quiza en threads que no se cancelan en windows (zeng?) agregar llamada a pthread_testcancel();


-al volver de pantalla completa que intente restaurar ventanas si habian abiertas antes de ir a pantalla completa?

--Fin Errores


-Renombrar setting de background windows por multitask windows? O algo así
Debe indicar que se puede dejar ventanas en background pero que también pueden haber múltiples ventanas a la vez 

-Si se cambia el prompt de ZRCP, esperar también ese prompt en ZENG

-Para ZENG con más de 2 pcs:
*1 solo master que pueda enviar snapshots a más de 1 slave. Fácil
*ZRCP que permita más de 1 conexión a la vez, para recibir los eventos de envíos de teclas de los slaves. Aquí por una parte hay que tener semáforos (o no?) al actuar sobre según que partes de ZEsarUX y además lanzar threads aparte ( o fork? ) por cada conexión nueva de cliente ZRCP



-Funciones de utils no deberían involucrar nada del menú


-quiza funcion que espera_no_tecla sin considerar movimiento raton, deberia ser la habitual, y solo en casos concretos
usar la que si considera movimiento raton

 
- ajustar memory zones para zx81: rom deberia ser 8kb. revisar tambien zx80


-A mejorar en Next para próxima versión: Ver TODO_machines, sección Next, en : "A mejorar en Next para próxima versión"

-Compatibilidad de print char trap de numeros (chardetect_rom_compat_numbers.v) para zxuno y otras spectrum. Agregar a tests/printtrap_test.sh



-mejorar hotswap con mas combinaciones de maquina (por ejemplo entre 48k y 48k+, o sea, hotswap entre maquinas de mismo tipo)

-al abrir ventanas por primera vez, la coordenada y debe ser por debajo de los botones superiores

-opcion vaciar papelera al salir

-exolon rzx, si se abre menu, se queda continuamente disparando y agachado (joystick seleccionado: cursor&shift, aunque parece que no importa esto)

-parecido a Recent files, que permita cambiar a directorios recientes

-selector tipo joystick, que sea un desplegable en vez de que haya que ir dando cada vez al enter

-smartload de un pok file

-parpadeos en driver xwindow en zx desktop al moverse por menus

-cacalib, en consola texto pura, parpadeo en menu (y en general en cualquier pixel emulado con brillo)

-driver fbdev en pc , con "zesarux --noconfigfile --vo fbdev > /dev/null". al desactivar border, genera panic. tambien desactivando border

-incorporar ZEsarUX en taskbar (dbus??) de kde, gnome o lo que se pueda

-Ventana con triángulo sierpensky que cuando volumen sea alto, se dibujen píxeles en blanco. Se dibuja 1 pixel en cada frame 
Usar no colores blanco, sino color de tinta normal o otro color del skin si hay volumen alto

Texto fondo tiene que se carácter 255 para que no se redibuje con espacios. O usar un flag de ventana que dice que no tiene que redibujar el texto 


-con daad debug, si hago un cambio de gui style, se activa la opcion de watch en daad debug... quiza no está gestionando bien el overlay??

-paws debug que funcione con aventuras en 128k. Ver manual de paws para esto
-daad no usa 128kb. Aunque hay un nuevo parser de daad (hecho en zxbasic) que si usa 128kb


-Documentación ZEsarUX. Dispositivos que estén en funcionamiento salen en color inverso 

-Modificar ayuda ZX desktop y faq. ZX Desktop se puede extender en vertical tambien...

-Ayuda hablar nuevo comportamiento botón derecho 

-First aid que diga que hay extras de ZEsarUX. Descargables desde menu (si hay ssl) o con tu navegador 

-Opción rpi que baje framedrop por defecto no hacerlo?

-Plus3dos handler: acabar de revisar que funcione con pd765 emulacion off


-Emulación floppy:


EL CONTROLADOR DE DISQUETES NEC 765
http://galia.fc.uaslp.mx/~cantocar/ARQUI_COM_II/LIBRO%20IBM-PC/1206.html


Format:DSK disk image file format - CPCWiki
https://www.cpcwiki.eu/index.php/Format:DSK_disk_image_file_format

More information
https://worldofspectrum.org/faq/reference/diskreference.htm#ZX

Operating Systems Development Series
http://www.brokenthorn.com/Resources/OSDev20.html


http://dunfield.classiccmp.org/r/765.pdf
￼
Quiza un modo mas facil (y menos real) en que cuando pida la cpu leer un byte, se le pase el siguiente del disco. Y otro mas real en que el disco esté "girando" como en real, y el byte que se le pase sea el que corresponda en ese momento (requerira funcion nested core). Algún setting para escoger entre los dos modos?

lectura sectores de floppy debe usar los ids y no offset directo (llamando a traps_plus3dos_getoff_track_sector igual que traps)
Y los ST0, ST1, etc de resultado, deben retornar los que hay en DSK? respuesta del comando es el siguiente sector, etc? o el actual?

-Emulación pcw 8256
Requiere antes floppy

-6128. Requiere antes floppy

-PD765: aparece A: y B: disponibles
con la mascara quitada al buscar sector_id, plus3dos handler fallara con carlos sainz por ejemplo
quiza usar funcion aparte para plus3dos handler, o que mascara sea un parametro (y pd765 siempre use mascara 255)

-mensajes panic con codigo error. Por ejemplo, 0001 out of memory. mas bien seria un tipo de error, porque out of memory
hay muchos tipos: out of memory cargando, out of memory asignando buffer rainbow, etc.
Seria: error message: igual que hay ahora. Y luego clases: 0001 out of memory. 0002 segmentation fault, etc


-Test unitario +3 que cargue un disco autoarrancable y espere output concreto


-mejorar dsk_extended_get_start_track. se tiene que parecer mas al basico


-Quiza debug console que el ancho del mensaje lo obtenga de la propia ventana. definir un maximo pero el salto de linea
del mensaje lo obtiene de la ventana


-text adventure map: opcion mostrar descripciones. localidad 14 por ejemplo se mezcla



-cambio en menu_inicio y zxvision_switch_to_window_on_open_menu:

https://github.com/chernandezba/zesarux/commit/b9a4eaad8bed8b9fe37c44176f7f19d2719ffbb2#diff-521337e1d39e077ccafa540faa6e18649b8c776cc3b4865ec4f648e4dca04216

-al conmutar de ventana de ZEsarUX, en Mac, a veces se congela la aplicación. por que? tanto pasa con menu abierto como cerrado.


-Abrir ventana arbitraria. 
*Para icono ya está. Hacerlo para tecla F??, parámetro adicional para funciones que permita usar parámetros
*Crear imagen del icono

-Ventana parecida a Window Information pero solo para conmutar de ventanas (como un panel de tareas): con iconos de cada aplicación cargada

-autoload en +3 de cinta no va, seguramente porque al tener un dsk insertado, la rutina salta diferente (o le envia el enter antes)

-releer tabla read data y valores chrn cuando el procesador termina un comando. cuando sucede? como puede terminar un comando??

-ver otros casos al llamar a dsk_get_sector_size_track_from_offset se debe hacer usando lectura extendida dsk_get_real_sector_size_extended

-en breakpoints, condicion tipo: mwa=16384, no salta si opcode escribe 16 bits de golpe, como:

ld (16384),HL

en este caso si que saltaria con:

mwa=16385

Porque se queda la ultima direccion mwa escrita de ese opcode


-Read track
* A determinar flags que se activan según petición inicial chrn
* A determinar que pasa si hay menos sectores que eot: creo que esto ya se gestiona cuando le pide el sector

-Football Manager 2.dsk con pista con C=FFH



-error en debug cpu, se puede enviar el foco de teclado a la maquina emulada. hacer:
*step mode
*funcion z (memory zone) o tecla (o) por ejemplo
*quitar step mode
*pulsar teclas y llega a maquina emulada

-en daad debug, pulsar m de condmessage, sale dos veces (con cozumel 1 y inventario)

-en debug cpu, si instruccion por ejemplo:

ld a,(16384) 

que muestre contenido de dirección 16384.

donde mostrarlo? en teoria mostrar como se hace el resaltado de registros, al mover el cursor, quizá ponerlo 
debajo de (hl),(de) y (bc)
->completar. faltan (ix+d),(iy+d), tanto en ld r,(ix+d), como set, res, bit, rl, ...
Solo hecho ld b,(ix/iy+d)

->pendiente ld ix,(nn), ld (nn),ix

-assemble: ld hl,(68H) no interpreta el 68H como hexadecimal

-Ítems de menú que solo aparezcan en modo avanzado

-Icono de aplicación que se vea distinto si la aplicación está abierta 

-Cálculo de tiempo usado en cada app en background 

-Breakpoints de memorias absolutas - Gunther stube

-Opción maximizar todas ventanas

-Probar menú char height a 7 dibujando 7 líneas solo de alto 

--nochangeslowparameters por defecto. Opción nueva --changeslowparameters y/o opcion compilacion en configure por defecto no slow.
opcion de raspberry en compilacion no debe activar modo slow parameters, tienen que ser cosas distintas ahora

-combinacion de tecla especial que haga un "reinicio" del menu, por si se ha colgado en algun sitio